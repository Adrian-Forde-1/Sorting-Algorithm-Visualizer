{"version":3,"sources":["Algorithms/MergeSort.js","Algorithms/QuickSortLomuto.js","Algorithms/QuickSortHoare.js","Algorithms/HeapSort.js","Algorithms/SelectionSort.js","Algorithms/InsertionSort.js","Algorithms/GnomeSort.js","SortingAlgorithms/SortingAlgorithms.js","Algorithms/BubbleSort.js","App.js","serviceWorker.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getQuickSortAnimationsLomuto","quickSort","start","end","index","pivotIndex","pivotValue","temp","swap","partition","a","b","getQuickSortAnimationsHoare","quickSortHelper","pivot","left","right","getHeapSortAnimations","size","makeMaxHeap","makeFirstMaxHeap","heapSort","heapSize","largestNum","getSelectionSortAnimations","sortedArray","forEach","element","currentMin","currentIndex","compare","arr","i1","i2","selectionSort","getInsertionSortAnimations","spliced","splice","insertionSort","getGnomeSortAnimations","moveBack","gnomeSortHelper","t","SORT_SPEED_MS","SECONDARY_COLOR","yellow","pink","isRunning","canVisualize","currentPattern","isPattern","currentAlgo","widthScaling","isToggled","windowWidth","window","innerWidth","SortingVisualizer","props","initialArrayLength","currentWindowWidth","state","quickSortPattern","minArrayBars","maxArrayBars","NUMBER_OF_ARRAY_BARS","this","resetArray","document","getElementById","classList","toggle","querySelector","style","display","documentElement","setProperty","innerHTML","opacity","min","max","random","arrayBars","querySelectorAll","x","backgroundColor","setState","disable","enable","buttons","toggleButtons","disabled","didStart","setIsRunning","algo","mergeSort","bubbleSort","gnomeSort","alert","timer","started","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","setTimeout","newHeight","height","undefined","background","whichPattern","changed","getBubbleSortAnimations","className","onClick","id","whichAlgorithm","type","defaultValue","onChange","slider","value","currentValue","prevState","toString","value2","toggleButton","Lomuto_btn","Hoare_btn","map","idx","key","Component","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dac6d7d4.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    // console.log(\"while 1\");\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([i, j]);\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index i in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index j in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    // console.log(\"while 2\");\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([i, i]);\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([i, i]);\r\n    // We overwrite the value at index k in the original array with the\r\n    // value at index i in the auxiliary array.\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    // console.log(\"while 3\");\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([j, j]);\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([j, j]);\r\n    // We overwrite the value at index k in the original array with the\r\n    // value at index j in the auxiliary array.\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n","// Lomuto partition scheme\r\nexport function getQuickSortAnimationsLomuto(array) {\r\n  const animations = [];\r\n  quickSort(array, 0, array.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\nfunction quickSort(array, start, end, animations) {\r\n  if (start >= end) return;\r\n  let index = partition(array, start, end, animations);\r\n  quickSort(array, start, index - 1, animations);\r\n  quickSort(array, index + 1, end, animations);\r\n}\r\n\r\nfunction partition(array, start, end, animations) {\r\n  let pivotIndex = start;\r\n  let pivotValue = array[end];\r\n  for (let i = start; i < end; i++) {\r\n    animations.push([i, end]);\r\n    animations.push([i, end]);\r\n    if (array[i] > pivotValue) {\r\n      animations.push([pivotIndex, array[pivotIndex]]);\r\n    } else {\r\n      animations.push([pivotIndex, array[i]]);\r\n      let temp = array[pivotIndex];\r\n      swap(array, i, pivotIndex);\r\n\r\n      animations.push([i, pivotIndex]);\r\n      animations.push([i, pivotIndex]);\r\n      animations.push([i, temp]);\r\n      pivotIndex++;\r\n    }\r\n  }\r\n  swap(array, pivotIndex, end);\r\n  animations.push([pivotIndex, end]);\r\n  animations.push([pivotIndex, end]);\r\n  animations.push([end, array[end]]);\r\n  animations.push([pivotIndex, end]);\r\n  animations.push([pivotIndex, end]);\r\n  animations.push([pivotIndex, array[pivotIndex]]);\r\n  return pivotIndex;\r\n}\r\n\r\nfunction swap(array, a, b) {\r\n  let temp = array[a];\r\n  array[a] = array[b];\r\n  array[b] = temp;\r\n}\r\n","// Hoare partition scheme\r\nexport function getQuickSortAnimationsHoare(array) {\r\n  const animations = [];\r\n  quickSortHelper(array, 0, array.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\nfunction quickSortHelper(array, start, end, animations) {\r\n  if (start >= end) return;\r\n  let pivot = start;\r\n  let left = start + 1;\r\n  let right = end;\r\n\r\n  while (right >= left) {\r\n    if (array[left] > array[pivot] && array[right] < array[pivot]) {\r\n      animations.push([left, right]);\r\n      animations.push([left, right]);\r\n      let temp = array[right];\r\n      array[right] = array[left];\r\n      array[left] = temp;\r\n      animations.push([right, array[right]]);\r\n    }\r\n    if (array[right] >= array[pivot]) {\r\n      animations.push([right, right]);\r\n      animations.push([right, right]);\r\n      animations.push([right, array[right]]);\r\n      right--;\r\n    }\r\n    if (array[left] <= array[pivot]) {\r\n      animations.push([left, left]);\r\n      animations.push([left, left]);\r\n      animations.push([left, array[left]]);\r\n      left++;\r\n    }\r\n    // if (right >= left) toDispatch.push([left, right]);\r\n  }\r\n  if (pivot !== right) {\r\n    animations.push([right, pivot]);\r\n    animations.push([right, pivot]);\r\n    let temp = array[right];\r\n    array[right] = array[pivot];\r\n    array[pivot] = temp;\r\n    animations.push([pivot, array[pivot]]);\r\n\r\n    animations.push([pivot, right]);\r\n    animations.push([pivot, right]);\r\n    animations.push([right, array[right]]);\r\n  }\r\n\r\n  quickSortHelper(array, start, right - 1, animations);\r\n  quickSortHelper(array, right + 1, end, animations);\r\n}\r\n","export function getHeapSortAnimations(array) {\r\n  const animations = [];\r\n  heapSort(array, animations);\r\n  let end = array.length - 1;\r\n  while (end > 0) {\r\n    let temp = array[end];\r\n    array[end] = array[0];\r\n    array[0] = temp;\r\n    animations.push([0, end]);\r\n    animations.push([0, end]);\r\n    animations.push([0, array[0]]);\r\n    animations.push([0, end]);\r\n    animations.push([0, end]);\r\n    animations.push([end, array[end]]);\r\n    end--;\r\n  }\r\n  return animations;\r\n}\r\n\r\nfunction heapSort(array, animations) {\r\n  array = makeFirstMaxHeap(array, animations);\r\n  let size = array.length;\r\n  let temp;\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    temp = array[0];\r\n    array[0] = array[i];\r\n    array[i] = temp;\r\n    size--;\r\n    makeMaxHeap(array, 0, size, animations);\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction makeFirstMaxHeap(array, animations) {\r\n  for (let i = Math.floor(array.length / 2); i >= 0; i--) {\r\n    makeMaxHeap(array, i, array.length, animations);\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction makeMaxHeap(array, index, heapSize, animations) {\r\n  const left = 2 * index + 1;\r\n  const right = 2 * index + 2;\r\n\r\n  let largestNum = index;\r\n  if (heapSize > left && array[largestNum] < array[left]) {\r\n    animations.push([left, largestNum]);\r\n    animations.push([left, largestNum]);\r\n    largestNum = left;\r\n    animations.push([largestNum, array[left]]);\r\n  }\r\n\r\n  if (heapSize > right && array[largestNum] < array[right]) {\r\n    animations.push([right, largestNum]);\r\n    animations.push([right, largestNum]);\r\n    largestNum = right;\r\n    animations.push([right, array[right]]);\r\n  }\r\n\r\n  if (largestNum !== index) {\r\n    const temp = array[index];\r\n    array[index] = array[largestNum];\r\n    array[largestNum] = temp;\r\n    animations.push([index, largestNum]);\r\n    animations.push([index, largestNum]);\r\n    animations.push([largestNum, array[largestNum]]);\r\n    animations.push([index, largestNum]);\r\n    animations.push([index, largestNum]);\r\n    animations.push([index, array[index]]);\r\n    makeMaxHeap(array, largestNum, heapSize, animations);\r\n  }\r\n}\r\n","export function getSelectionSortAnimations(array) {\r\n  const animations = [];\r\n  selectionSort(array, animations);\r\n  //   sort(array, animations);\r\n  return animations;\r\n}\r\n\r\nfunction selectionSort(array, animations) {\r\n  let sortedArray = [...array];\r\n  sortedArray.forEach((element, index) => {\r\n    let currentMin = element;\r\n    let currentIndex = index;\r\n    for (let i = index; i < sortedArray.length; i++) {\r\n      animations.push([i, currentIndex]);\r\n      animations.push([i, currentIndex]);\r\n      if (compare(sortedArray[i], currentMin) < 0) {\r\n        currentMin = sortedArray[i];\r\n        currentIndex = i;\r\n        animations.push([currentIndex, currentMin]);\r\n      } else {\r\n        animations.push([currentIndex, currentMin]);\r\n      }\r\n    }\r\n    sortedArray = swap(sortedArray, index, currentIndex);\r\n    animations.push([currentIndex, index]);\r\n    animations.push([currentIndex, index]);\r\n    animations.push([currentIndex, sortedArray[currentIndex]]);\r\n    animations.push([currentIndex, index]);\r\n    animations.push([currentIndex, index]);\r\n    animations.push([index, sortedArray[index]]);\r\n  });\r\n  return sortedArray;\r\n}\r\n\r\nfunction swap(arr, i1, i2) {\r\n  let temp = arr[i1];\r\n  arr[i1] = arr[i2];\r\n  arr[i2] = temp;\r\n  return arr;\r\n}\r\n\r\nfunction compare(a, b) {\r\n  if (a < b) return -1;\r\n  // a comes first\r\n  else if (a > b) return 1; // b comes first\r\n  return 0;\r\n}\r\n\r\n// function sort(array, animations) {\r\n//   let sortedArray = [...array];\r\n//   let minIndex = 0;\r\n//   for (let i = 0; i < sortedArray.length; i++) {\r\n//     animations.push([i, minIndex]);\r\n//     animations.push([i, minIndex]);\r\n//     if (sortedArray[i] > sortedArray[minIndex]) {\r\n//       sortedArray[minIndex] = sortedArray[i];\r\n//       animations.push([minIndex, sortedArray[minIndex]]);\r\n//       animations.push([i, minIndex]);\r\n//       animations.push([i, minIndex]);\r\n//       animations.push([i, sortedArray[i]]);\r\n//     } else {\r\n//       animations.push([minIndex, sortedArray[minIndex]]);\r\n//       animations.push([i, minIndex]);\r\n//       animations.push([i, minIndex]);\r\n//       animations.push([i, sortedArray[i]]);\r\n//     }\r\n//   }\r\n//   return sortedArray;\r\n// }\r\n","export function getInsertionSortAnimations(array) {\r\n  const animations = [];\r\n  insertionSort(array, animations);\r\n  return animations;\r\n}\r\n\r\nfunction insertionSort(array, animations) {\r\n  var sortedArray = [...array];\r\n  for (let i = 1; i < sortedArray.length; i++) {\r\n    for (let j = 0; j < i; j++) {\r\n      animations.push([i, j]);\r\n      animations.push([i, j]);\r\n      if (sortedArray[i] < sortedArray[j]) {\r\n        let spliced = sortedArray.splice(i, 1);\r\n        sortedArray.splice(j, 0, spliced[0]);\r\n        animations.push([i, sortedArray[i]]);\r\n        animations.push([i, j]);\r\n        animations.push([i, j]);\r\n        animations.push([j, sortedArray[j]]);\r\n      } else {\r\n        animations.push([i, sortedArray[i]]);\r\n        animations.push([i, j]);\r\n        animations.push([i, j]);\r\n        animations.push([j, sortedArray[j]]);\r\n      }\r\n    }\r\n  }\r\n  return sortedArray;\r\n}\r\n","export function getGnomeSortAnimations(array) {\r\n  const animations = [];\r\n  gnomeSortHelper(array, animations);\r\n  return animations;\r\n}\r\n\r\nfunction gnomeSortHelper(array, animations) {\r\n  for (let i = 1; i < array.length; i++) {\r\n    if (array[i - 1] > array[i]) moveBack(array, i, animations);\r\n    else {\r\n      animations.push([i, i - 1]);\r\n      animations.push([i, i - 1]);\r\n      animations.push([i, array[i]]);\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction moveBack(array, i, animations) {\r\n  for (; i > 0 && array[i - 1] > array[i]; i--) {\r\n    var t = array[i];\r\n    array[i] = array[i - 1];\r\n    array[i - 1] = t;\r\n    animations.push([i, i - 1]);\r\n    animations.push([i, i - 1]);\r\n    animations.push([i, array[i]]);\r\n    animations.push([i, i - 1]);\r\n    animations.push([i, i - 1]);\r\n    animations.push([i - 1, array[i - 1]]);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './SortingAlgorithms.css';\r\nimport { getMergeSortAnimations } from '../Algorithms/MergeSort';\r\nimport { getQuickSortAnimationsLomuto } from '../Algorithms/QuickSortLomuto';\r\nimport { getQuickSortAnimationsHoare } from '../Algorithms/QuickSortHoare';\r\nimport { getBubbleSortAnimations } from '../Algorithms/BubbleSort';\r\nimport { getHeapSortAnimations } from '../Algorithms/HeapSort';\r\nimport { getSelectionSortAnimations } from '../Algorithms/SelectionSort';\r\nimport { getInsertionSortAnimations } from '../Algorithms/InsertionSort';\r\nimport { getGnomeSortAnimations } from '../Algorithms/GnomeSort';\r\n\r\n//Audio\r\n// let audioCtx = new AudioContext();\r\n\r\n// let oscillator = audioCtx.createOscillator();\r\n\r\n// Change this value for the speed of the animations.\r\nlet SORT_SPEED_MS = 1;\r\n\r\n// Change this value for the number of bars (value) in the array.\r\n// let NUMBER_OF_ARRAY_BARS = 300;\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = '#8bd8bd';\r\nlet SECONDARY_COLOR = '#eb2188';\r\n\r\nconst yellow = '#D6ED17FF';\r\nconst pink = '#eb2188';\r\n// const purple = \"#3c1a5b\";\r\nconst cyan = '#8bd8bd';\r\n\r\nlet isRunning = false;\r\n\r\nlet canVisualize = true;\r\n\r\n//Quick Sort Algorithm patterns\r\nlet currentPattern = 'Lomuto Pattern';\r\n\r\n// // This is the color of array bars that are being compared throughout the animations.\r\n// const SECONDARY_COLOR = \"#fff748\";\r\n\r\nlet isPattern = false; //Checks to see if there are more than one pattern for an algorithm\r\nlet currentAlgo = 'Merge Sort';\r\n\r\nconst heightShortener = 0.6;\r\n\r\nlet widthScaling = 0.5;\r\n\r\n// Checks to see if the macro buttons are toggled. If they are on, it will disable the speed slider and lower its\r\n// opacity, but if they are off it will enable the speed slider and set its opacity to 1\r\nlet isToggled = true;\r\n\r\n// var ViewPortWidth = Math.max(\r\n//   document.documentElement.clientWidth,\r\n//   window.innerWidth || 0\r\n// );\r\n\r\nvar windowWidth = window.innerWidth;\r\n\r\n// var ViewPortHeight = Math.max(\r\n//   document.documentElement.clientHeight,\r\n//   window.innerHeight || 0\r\n// );\r\n\r\nexport default class SortingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var initialArrayLength = 0;\r\n\r\n    var currentWindowWidth = window.innerWidth;\r\n    if (currentWindowWidth <= 400) initialArrayLength = 50;\r\n    else if (currentWindowWidth <= 500) initialArrayLength = 100;\r\n    else if (currentWindowWidth <= 600) initialArrayLength = 150;\r\n    else if (currentWindowWidth <= 700) initialArrayLength = 200;\r\n    else if (currentWindowWidth <= 800) initialArrayLength = 250;\r\n    else if (currentWindowWidth <= 900) initialArrayLength = 275;\r\n    else initialArrayLength = 300;\r\n    this.state = {\r\n      array: [],\r\n      quickSortPattern: 'Lomuto',\r\n      minArrayBars: 5,\r\n      maxArrayBars: initialArrayLength,\r\n      NUMBER_OF_ARRAY_BARS: initialArrayLength,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n\r\n    document.getElementById('Lomuto-btn').classList.toggle('current-pattern');\r\n\r\n    if (isPattern) {\r\n      document.querySelector('#change-pattern-btn').style.display =\r\n        'inline-block';\r\n    } else {\r\n      document.querySelector('#change-pattern-btn').style.display = 'none';\r\n    }\r\n\r\n    document.documentElement.style.setProperty(\r\n      '--view-port-width',\r\n      `${windowWidth / (this.state.NUMBER_OF_ARRAY_BARS * widthScaling)}px`\r\n    );\r\n\r\n    document.getElementById('current-algorithm').innerHTML = currentAlgo;\r\n\r\n    document.querySelector(\r\n      '#value'\r\n    ).innerHTML = this.state.NUMBER_OF_ARRAY_BARS;\r\n    document.querySelector('#value2').innerHTML = SORT_SPEED_MS;\r\n  }\r\n\r\n  resetArray() {\r\n    canVisualize = true;\r\n    document.querySelector('.vis-btn').style.opacity = 1;\r\n    const array = [];\r\n    for (let i = 0; i < this.state.NUMBER_OF_ARRAY_BARS; i++) {\r\n      array.push(randomIntFromInterval(5, 730));\r\n    }\r\n\r\n    const arrayBars = document.querySelectorAll('.array-bar');\r\n    for (let x = 0; x < arrayBars.length; x++) {\r\n      arrayBars[x].style.backgroundColor = cyan;\r\n    }\r\n    this.setState({ array });\r\n\r\n    if (this.state.NUMBER_OF_ARRAY_BARS < 200) widthScaling = 3;\r\n    else widthScaling = 3;\r\n\r\n    document.documentElement.style.setProperty(\r\n      '--view-port-width',\r\n      `${windowWidth / (this.state.NUMBER_OF_ARRAY_BARS * widthScaling)}px`\r\n    );\r\n\r\n    document.documentElement.style.setProperty(\r\n      '--array-bar-color',\r\n      PRIMARY_COLOR\r\n    );\r\n  }\r\n\r\n  setIsRunning() {\r\n    if (isRunning === true) {\r\n      this.disable();\r\n    } else if (isRunning === false) {\r\n      this.enable();\r\n    }\r\n  }\r\n\r\n  disable() {\r\n    // Decrease the opacity of all the interactables\r\n    isRunning = true;\r\n    // const sliders = document.querySelectorAll(\".slider\");\r\n    const buttons = document.querySelectorAll('.btn');\r\n    const toggleButtons = document.querySelectorAll('.toggle-btn');\r\n\r\n    document.querySelector('#change-pattern-btn').style.opacity = 0.5;\r\n    document.querySelector('.drop-down-container').style.opacity = 0.5;\r\n    document.getElementById('array-num-slider').disabled = true;\r\n    document.getElementById('speed-slider').disabled = true;\r\n    document.getElementById('array-num-slider').style.opacity = 0.5;\r\n    document.getElementById('speed-slider').style.opacity = 0.5;\r\n\r\n    for (let i = 0; i < toggleButtons.length; i++)\r\n      toggleButtons[i].style.opacity = 0.5;\r\n    for (let i = 0; i < buttons.length; i++) buttons[i].style.opacity = 0.5;\r\n    // for (let i = 0; i < sliders.length; i++) sliders[i].style.opacity = 0.5;\r\n  }\r\n\r\n  enable() {\r\n    // Increase the opacity of all the interactables\r\n    isRunning = false;\r\n\r\n    // const sliders = document.querySelectorAll(\".slider\");\r\n    const buttons = document.querySelectorAll('.btn');\r\n    const toggleButtons = document.querySelectorAll('.toggle-btn');\r\n\r\n    document.querySelector('#change-pattern-btn').style.opacity = 1;\r\n    document.querySelector('.drop-down-container').style.opacity = 1;\r\n    document.getElementById('array-num-slider').disabled = false;\r\n    if (isToggled) {\r\n      document.getElementById('speed-slider').disabled = false;\r\n      document.getElementById('speed-slider').style.opacity = 1;\r\n    }\r\n    document.getElementById('array-num-slider').style.opacity = 1;\r\n\r\n    for (let i = 0; i < buttons.length; i++) buttons[i].style.opacity = 1;\r\n    for (let i = 0; i < toggleButtons.length; i++)\r\n      toggleButtons[i].style.opacity = 1;\r\n    // for (let i = 0; i < sliders.length; i++) sliders[i].style.opacity = 1;\r\n  }\r\n\r\n  started(didStart) {\r\n    if (didStart === true) {\r\n      isRunning = true;\r\n      this.setIsRunning();\r\n    } else if (didStart === false) {\r\n      isRunning = false;\r\n      this.setIsRunning();\r\n    }\r\n  }\r\n\r\n  whichAlgorithm(algo) {\r\n    if (algo === 'Merge Sort') {\r\n      this.mergeSort();\r\n    } else if (algo === 'Quick Sort') {\r\n      this.quickSort();\r\n    } else if (algo === 'Heap Sort') {\r\n      this.heapSort();\r\n    } else if (algo === 'Bubble Sort') {\r\n      this.bubbleSort();\r\n    } else if (algo === 'Selection Sort') {\r\n      this.selectionSort();\r\n    } else if (algo === 'Insertion Sort') {\r\n      this.insertionSort();\r\n    } else if (algo === 'Gnome Sort') {\r\n      this.gnomeSort();\r\n    } else alert('That is not an avaiable algorithm');\r\n  }\r\n\r\n  mergeSort() {\r\n    let timer = 0;\r\n    this.started(true);\r\n    const animations = getMergeSortAnimations(this.state.array);\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        if (i % 2 === 0) {\r\n          SECONDARY_COLOR = yellow;\r\n        } else {\r\n          SECONDARY_COLOR = pink;\r\n        }\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * SORT_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n\r\n          barOneStyle.height = `${newHeight * heightShortener}px`;\r\n        }, i * SORT_SPEED_MS);\r\n      }\r\n    }\r\n\r\n    timer += animations.length * SORT_SPEED_MS;\r\n    setTimeout(() => {\r\n      for (let i = 0; i < arrayBars.length; i++) {\r\n        if (arrayBars[i] === undefined) {\r\n          return;\r\n        } else {\r\n          setTimeout(() => {\r\n            const curArrayBar = arrayBars[i].style;\r\n            curArrayBar.background = pink;\r\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\r\n          }, i * 5);\r\n        }\r\n      }\r\n    }, timer);\r\n  }\r\n\r\n  quickSort() {\r\n    let whichPattern;\r\n    if (currentPattern === 'Lomuto Pattern')\r\n      whichPattern = getQuickSortAnimationsLomuto(this.state.array);\r\n    else if (currentPattern === 'Hoare Pattern')\r\n      whichPattern = getQuickSortAnimationsHoare(this.state.array);\r\n    let timer = 0;\r\n    this.started(true);\r\n    const animations = whichPattern;\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * SORT_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight * heightShortener}px`;\r\n        }, i * SORT_SPEED_MS);\r\n      }\r\n    }\r\n\r\n    timer += animations.length * SORT_SPEED_MS;\r\n    setTimeout(() => {\r\n      for (let i = 0; i < arrayBars.length; i++) {\r\n        if (arrayBars[i] === undefined) {\r\n          return;\r\n        } else {\r\n          setTimeout(() => {\r\n            const curArrayBar = arrayBars[i].style;\r\n            curArrayBar.background = pink;\r\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\r\n          }, i * 5);\r\n        }\r\n      }\r\n    }, timer);\r\n  }\r\n\r\n  heapSort() {\r\n    let timer = 0;\r\n    this.started(true);\r\n    const animations = getHeapSortAnimations(this.state.array);\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        if (i % 2 === 0) {\r\n          SECONDARY_COLOR = yellow;\r\n        } else {\r\n          SECONDARY_COLOR = pink;\r\n        }\r\n\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * SORT_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight * heightShortener}px`;\r\n        }, i * SORT_SPEED_MS);\r\n      }\r\n    }\r\n\r\n    timer += animations.length * SORT_SPEED_MS;\r\n    setTimeout(() => {\r\n      for (let i = 0; i < arrayBars.length; i++) {\r\n        if (arrayBars[i] === undefined) {\r\n          return;\r\n        } else {\r\n          setTimeout(() => {\r\n            const curArrayBar = arrayBars[i].style;\r\n            curArrayBar.background = pink;\r\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\r\n          }, i * 5);\r\n        }\r\n      }\r\n    }, timer);\r\n  }\r\n\r\n  selectionSort() {\r\n    let timer = 0;\r\n    this.started(true);\r\n    const animations = getSelectionSortAnimations(this.state.array);\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        if (i % 2 === 0) {\r\n          SECONDARY_COLOR = yellow;\r\n        } else {\r\n          SECONDARY_COLOR = pink;\r\n        }\r\n\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * SORT_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight * heightShortener}px`;\r\n        }, i * SORT_SPEED_MS);\r\n      }\r\n    }\r\n\r\n    timer += animations.length * SORT_SPEED_MS;\r\n    setTimeout(() => {\r\n      for (let i = 0; i < arrayBars.length; i++) {\r\n        if (arrayBars[i] === undefined) {\r\n          return;\r\n        } else {\r\n          setTimeout(() => {\r\n            const curArrayBar = arrayBars[i].style;\r\n            curArrayBar.background = pink;\r\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\r\n          }, i * 5);\r\n        }\r\n      }\r\n    }, timer);\r\n  }\r\n\r\n  insertionSort() {\r\n    let timer = 0;\r\n    this.started(true);\r\n    const animations = getInsertionSortAnimations(this.state.array);\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        if (i % 2 === 0) {\r\n          SECONDARY_COLOR = yellow;\r\n        } else {\r\n          SECONDARY_COLOR = pink;\r\n        }\r\n\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * SORT_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight * heightShortener}px`;\r\n        }, i * SORT_SPEED_MS);\r\n      }\r\n    }\r\n\r\n    timer += animations.length * SORT_SPEED_MS;\r\n    setTimeout(() => {\r\n      for (let i = 0; i < arrayBars.length; i++) {\r\n        if (arrayBars[i] === undefined) {\r\n          return;\r\n        } else {\r\n          setTimeout(() => {\r\n            const curArrayBar = arrayBars[i].style;\r\n            curArrayBar.background = pink;\r\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\r\n          }, i * 5);\r\n        }\r\n      }\r\n    }, timer);\r\n  }\r\n\r\n  bubbleSort() {\r\n    let timer = 0;\r\n    this.started(true);\r\n    const animations = getBubbleSortAnimations(this.state.array);\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * SORT_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight * heightShortener}px`;\r\n        }, i * SORT_SPEED_MS);\r\n      }\r\n    }\r\n\r\n    timer += animations.length * SORT_SPEED_MS;\r\n    setTimeout(() => {\r\n      for (let i = 0; i < arrayBars.length; i++) {\r\n        if (arrayBars[i] === undefined) {\r\n          return;\r\n        } else {\r\n          setTimeout(() => {\r\n            const curArrayBar = arrayBars[i].style;\r\n            curArrayBar.background = pink;\r\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\r\n          }, i * 5);\r\n        }\r\n      }\r\n    }, timer);\r\n  }\r\n\r\n  gnomeSort() {\r\n    let timer = 0;\r\n    this.started(true);\r\n    const animations = getGnomeSortAnimations(this.state.array);\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * SORT_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight * heightShortener}px`;\r\n        }, i * SORT_SPEED_MS);\r\n      }\r\n    }\r\n    timer += animations.length * SORT_SPEED_MS;\r\n    setTimeout(() => {\r\n      for (let i = 0; i < arrayBars.length; i++) {\r\n        if (arrayBars[i] === undefined) {\r\n          return;\r\n        } else {\r\n          setTimeout(() => {\r\n            const curArrayBar = arrayBars[i].style;\r\n            curArrayBar.background = pink;\r\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\r\n          }, i * 5);\r\n        }\r\n      }\r\n    }, timer);\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    // window.addEventListener('resize', () => {\r\n    //   // canReRenderBars = true;\r\n    //   var currentWindowWidth = window.innerWidth;\r\n    //   if (currentWindowWidth <= 400) {\r\n    //     this.setState(prevState => ({\r\n    //       maxArrayBars: (prevState.maxArrayBars = 50)\r\n    //     }));\r\n\r\n    //     this.setState(\r\n    //       prevState => ({\r\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\r\n    //       }),\r\n    //       () => {\r\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\r\n    //         this.resetArray();\r\n    //       }\r\n    //     );\r\n    //   } else if (currentWindowWidth <= 500) {\r\n    //     this.setState(prevState => ({\r\n    //       maxArrayBars: (prevState.maxArrayBars = 100)\r\n    //     }));\r\n\r\n    //     this.setState(\r\n    //       prevState => ({\r\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\r\n    //       }),\r\n    //       () => {\r\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\r\n    //         this.resetArray();\r\n    //       }\r\n    //     );\r\n    //   } else if (currentWindowWidth <= 600) {\r\n    //     this.setState(prevState => ({\r\n    //       maxArrayBars: (prevState.maxArrayBars = 150)\r\n    //     }));\r\n\r\n    //     this.setState(\r\n    //       prevState => ({\r\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\r\n    //       }),\r\n    //       () => {\r\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\r\n    //         this.resetArray();\r\n    //       }\r\n    //     );\r\n    //   } else if (currentWindowWidth <= 700) {\r\n    //     this.setState(prevState => ({\r\n    //       maxArrayBars: (prevState.maxArrayBars = 200)\r\n    //     }));\r\n\r\n    //     this.setState(\r\n    //       prevState => ({\r\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\r\n    //       }),\r\n    //       () => {\r\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\r\n    //         this.resetArray();\r\n    //       }\r\n    //     );\r\n    //   } else if (currentWindowWidth <= 800) {\r\n    //     this.setState(prevState => ({\r\n    //       maxArrayBars: (prevState.maxArrayBars = 250)\r\n    //     }));\r\n\r\n    //     this.setState(\r\n    //       prevState => ({\r\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\r\n    //       }),\r\n    //       () => {\r\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\r\n    //         this.resetArray();\r\n    //       }\r\n    //     );\r\n    //   } else if (currentWindowWidth <= 900) {\r\n    //     this.setState(prevState => ({\r\n    //       maxArrayBars: (prevState.maxArrayBars = 275)\r\n    //     }));\r\n\r\n    //     this.setState(\r\n    //       prevState => ({\r\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\r\n    //       }),\r\n    //       () => {\r\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\r\n    //         this.resetArray();\r\n    //       }\r\n    //     );\r\n    //   } else {\r\n    //     this.setState(prevState => ({\r\n    //       maxArrayBars: (prevState.maxArrayBars = 300)\r\n    //     }));\r\n\r\n    //     this.setState(\r\n    //       prevState => ({\r\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\r\n    //       }),\r\n    //       () => {\r\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\r\n    //         this.resetArray();\r\n    //       }\r\n    //     );\r\n    //   }\r\n    // });\r\n\r\n    return (\r\n      <div className=\"array-container\">\r\n        <nav className=\"nav\">\r\n          <ul>\r\n            {/* Generate New Array Button */}\r\n            <li>\r\n              <button\r\n                className=\"btn\"\r\n                onClick={() => {\r\n                  if (isRunning === false) {\r\n                    this.resetArray();\r\n                  } else {\r\n                  }\r\n                }}\r\n              >\r\n                Generate New Array\r\n              </button>\r\n            </li>\r\n            {/* Generate New Array Button End */}\r\n\r\n            {/* Drop-Down Box */}\r\n            <li\r\n              className=\"drop-down-container\"\r\n              onClick={() => {\r\n                if (isRunning === false) {\r\n                  const items = document.querySelector('.drop-down');\r\n                  items.classList.toggle('active');\r\n                }\r\n              }}\r\n            >\r\n              <span id=\"current-algorithm\"> </span>\r\n              <i className=\"fas fa-caret-down\"></i>\r\n              <ul className=\"drop-down\">\r\n                <li\r\n                  onClick={() => {\r\n                    currentAlgo = 'Merge Sort';\r\n                    document.querySelector(\r\n                      '#current-algorithm'\r\n                    ).innerHTML = currentAlgo;\r\n                    isPattern = false;\r\n                    document.querySelector(\r\n                      '#change-pattern-btn'\r\n                    ).style.display = 'none';\r\n                  }}\r\n                >\r\n                  Merge Sort\r\n                </li>\r\n                <li\r\n                  onClick={() => {\r\n                    currentAlgo = 'Quick Sort';\r\n                    document.querySelector(\r\n                      '#current-algorithm'\r\n                    ).innerHTML = currentAlgo;\r\n                    isPattern = true;\r\n                    document.querySelector(\r\n                      '#change-pattern-btn'\r\n                    ).style.display = 'inline-block';\r\n                  }}\r\n                >\r\n                  Quick Sort\r\n                </li>\r\n                <li\r\n                  onClick={() => {\r\n                    currentAlgo = 'Bubble Sort';\r\n\r\n                    document.querySelector(\r\n                      '#current-algorithm'\r\n                    ).innerHTML = currentAlgo;\r\n\r\n                    isPattern = false;\r\n\r\n                    document.querySelector(\r\n                      '#change-pattern-btn'\r\n                    ).style.display = 'none';\r\n                  }}\r\n                >\r\n                  Bubble Sort\r\n                </li>\r\n                {/* <li\r\n                  onClick={() => {\r\n                    currentAlgo = \"Heap Sort\";\r\n\r\n                    document.querySelector(\r\n                      \"#current-algorithm\"\r\n                    ).innerHTML = currentAlgo;\r\n\r\n                    isPattern = false;\r\n\r\n                    document.querySelector(\r\n                      \"#change-pattern-btn\"\r\n                    ).style.display = \"none\";\r\n                  }}\r\n                >\r\n                  Heap Sort\r\n                </li> */}\r\n                <li\r\n                  onClick={() => {\r\n                    currentAlgo = 'Gnome Sort';\r\n                    document.querySelector(\r\n                      '#current-algorithm'\r\n                    ).innerHTML = currentAlgo;\r\n                    isPattern = false;\r\n                    document.querySelector(\r\n                      '#change-pattern-btn'\r\n                    ).style.display = 'none';\r\n                  }}\r\n                >\r\n                  Gnome Sort\r\n                </li>\r\n                <li\r\n                  onClick={() => {\r\n                    currentAlgo = 'Selection Sort';\r\n                    document.querySelector(\r\n                      '#current-algorithm'\r\n                    ).innerHTML = currentAlgo;\r\n                    isPattern = false;\r\n                    document.querySelector(\r\n                      '#change-pattern-btn'\r\n                    ).style.display = 'none';\r\n                  }}\r\n                >\r\n                  Selection Sort\r\n                </li>\r\n                <li\r\n                  onClick={() => {\r\n                    currentAlgo = 'Insertion Sort';\r\n                    document.querySelector(\r\n                      '#current-algorithm'\r\n                    ).innerHTML = currentAlgo;\r\n                    isPattern = false;\r\n                    document.querySelector(\r\n                      '#change-pattern-btn'\r\n                    ).style.display = 'none';\r\n                  }}\r\n                >\r\n                  Insertion Sort\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            {/* Drop-Down Box */}\r\n\r\n            <li>\r\n              <button\r\n                className=\"vis-btn\"\r\n                onClick={() => {\r\n                  if (isRunning === false && canVisualize === true) {\r\n                    document.querySelector('.vis-btn').style.opacity = 0.5;\r\n                    canVisualize = false;\r\n                    this.whichAlgorithm(currentAlgo);\r\n                  } else if (isRunning === true) {\r\n                  }\r\n                }}\r\n              >\r\n                Visualize\r\n              </button>\r\n            </li>\r\n\r\n            <li>\r\n              <div className=\"slider-container\">\r\n                {/* Label for slider */}\r\n                <p className=\"slider-label\">Number of Bars</p>\r\n                {/* Value label for slider */}\r\n                <div className=\"slider-box\">\r\n                  <center>\r\n                    <div id=\"value\"></div>\r\n                  </center>\r\n                </div>\r\n                {/* Slider that changes the number of array values */}\r\n                <input\r\n                  type=\"range\"\r\n                  min={this.state.minArrayBars}\r\n                  max={this.state.maxArrayBars}\r\n                  defaultValue={this.state.NUMBER_OF_ARRAY_BARS}\r\n                  id=\"array-num-slider\"\r\n                  className=\"slider\"\r\n                  onChange={() => {\r\n                    if (isRunning) {\r\n                    } else {\r\n                      const slider = document.querySelector(\r\n                        '#array-num-slider'\r\n                      );\r\n                      const value = document.querySelector('#value');\r\n                      var x = slider.value;\r\n                      value.innerHTML = x;\r\n                      const currentValue = document.querySelector('#value');\r\n\r\n                      var color =\r\n                        'linear-gradient(90deg, #fff748' +\r\n                        x +\r\n                        '%, rgb(214, 214, 214)' +\r\n                        x +\r\n                        '%)';\r\n                      slider.style.background = color;\r\n                      // this.state.NUMBER_OF_ARRAY_BARS = x;\r\n                      // this.resetArray();\r\n                      // this.setState(\r\n                      //   {\r\n                      //     NUMBER_OF_ARRAY_BARS:\r\n                      //   },\r\n                      //   this.resetArray()\r\n                      // );\r\n\r\n                      this.setState(\r\n                        (prevState) => ({\r\n                          NUMBER_OF_ARRAY_BARS: (prevState.NUMBER_OF_ARRAY_BARS = currentValue.innerHTML.toString()),\r\n                        }),\r\n                        this.resetArray\r\n                      );\r\n                    }\r\n                  }}\r\n                  /* onMouseOver={() => {\r\n                    const slider = document.querySelector(\"#value-slider\");\r\n                    var x = slider.value;\r\n\r\n                    \r\n                  }} */\r\n                />\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"slider-container\">\r\n                {/* Label for slider */}\r\n                <p className=\"slider-label\">Speed in ms</p>\r\n                {/* Value label for slider */}\r\n                <div className=\"slider-box\">\r\n                  <center>\r\n                    <div id=\"value2\"></div>\r\n                  </center>\r\n                </div>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"0.0\"\r\n                  max=\"10\"\r\n                  defaultValue={Math.floor(SORT_SPEED_MS)}\r\n                  id=\"speed-slider\"\r\n                  className=\"slider\"\r\n                  onChange={() => {\r\n                    if (isRunning) {\r\n                    } else {\r\n                      const slider = document.querySelector('#speed-slider');\r\n                      const value2 = document.querySelector('#value2');\r\n                      var x = slider.value;\r\n                      value2.innerHTML = x;\r\n                      SORT_SPEED_MS = x;\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <button\r\n                className=\"toggle-btn\"\r\n                id=\"ultra-slow\"\r\n                onClick={() => {\r\n                  const toggleButton = document.querySelector('.toggle-btn');\r\n                  if (isRunning === false) {\r\n                    if (isToggled) {\r\n                      document.getElementById('speed-slider').disabled = true;\r\n                      document.getElementById(\r\n                        'speed-slider'\r\n                      ).style.opacity = 0.5;\r\n                      toggleButton.classList.toggle('toggleOn');\r\n                      SORT_SPEED_MS = 1000;\r\n                      isToggled = false;\r\n                    } else {\r\n                      document.getElementById('speed-slider').disabled = false;\r\n                      document.getElementById('speed-slider').style.opacity = 1;\r\n                      toggleButton.classList.toggle('toggleOn');\r\n                      SORT_SPEED_MS = 1;\r\n                      isToggled = true;\r\n                    }\r\n                  } else if (isRunning === true) {\r\n                  }\r\n                }}\r\n              >\r\n                Ultra Slow\r\n              </button>\r\n            </li>\r\n            <li\r\n              className=\"drop-down-container-2\"\r\n              id=\"change-pattern-btn\"\r\n              onClick={() => {\r\n                if (isPattern === true && isRunning === false) {\r\n                  const changePatternBtn = document.querySelector(\r\n                    '.drop-down-2'\r\n                  );\r\n                  changePatternBtn.classList.toggle('active');\r\n                } else {\r\n                }\r\n              }}\r\n            >\r\n              Patterns\r\n              <i className=\"fas fa-caret-down\"></i>\r\n              <ul className=\"drop-down-2\">\r\n                <li\r\n                  id=\"Lomuto-btn\"\r\n                  onClick={() => {\r\n                    if (currentPattern !== 'Lomuto Pattern') {\r\n                      currentPattern = 'Lomuto Pattern';\r\n\r\n                      const Lomuto_btn = document.getElementById('Lomuto-btn');\r\n                      const Hoare_btn = document.getElementById('Hoare-btn');\r\n                      Hoare_btn.classList.toggle('current-pattern');\r\n                      Lomuto_btn.classList.toggle('current-pattern');\r\n                    } else {\r\n                    }\r\n                  }}\r\n                >\r\n                  Lomuto Pattern\r\n                </li>\r\n                <li\r\n                  id=\"Hoare-btn\"\r\n                  onClick={() => {\r\n                    if (currentPattern !== 'Hoare Pattern') {\r\n                      currentPattern = 'Hoare Pattern';\r\n\r\n                      const Hoare_btn = document.getElementById('Hoare-btn');\r\n                      const Lomuto_btn = document.getElementById('Lomuto-btn');\r\n                      Lomuto_btn.classList.toggle('current-pattern');\r\n                      Hoare_btn.classList.toggle('current-pattern');\r\n                    } else {\r\n                    }\r\n                  }}\r\n                >\r\n                  Hoare Pattern\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"visualization\">\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value * heightShortener}px` }}\r\n            >\r\n              {/* {value} */}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","export function getBubbleSortAnimations(array) {\r\n  const animations = [];\r\n  // bubbleSortHelper(array, animations);\r\n  bubbleSort(array, animations);\r\n  return animations;\r\n}\r\n\r\n// function bubbleSortHelper(array, animations) {\r\n//   for (let i = 0; i < array.length; i++) {\r\n//     for (let x = 0; x < array.length - 1; x++) {\r\n//       animations.push([x, x + 1]);\r\n//       animations.push([x, x + 1]);\r\n//       if (array[x] > array[x + 1]) {\r\n//         swap(array, x, x + 1);\r\n//         animations.push([x + 1, array[x + 1]]);\r\n//         animations.push([x, x + 1]);\r\n//         animations.push([x, x + 1]);\r\n//         animations.push([x, array[x]]);\r\n//       } else {\r\n//         animations.push([x + 1, array[x + 1]]);\r\n//         animations.push([x + 1, x]);\r\n//         animations.push([x + 1, x]);\r\n//         animations.push([x, array[x]]);\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\n// function swap(array, a, b) {\r\n//   let temp = array[a];\r\n//   array[a] = array[b];\r\n//   array[b] = temp;\r\n// }\r\n\r\nfunction bubbleSort(array, animations) {\r\n  do {\r\n    var changed = false;\r\n    for (var i = 0; i < array.length - 1; i++) {\r\n      animations.push([i, i + 1]);\r\n      animations.push([i, i + 1]);\r\n      if (array[i] > array[i + 1]) {\r\n        var temp = array[i];\r\n        array[i] = array[i + 1];\r\n        array[i + 1] = temp;\r\n        animations.push([i + 1, array[i + 1]]);\r\n        animations.push([i, i + 1]);\r\n        animations.push([i, i + 1]);\r\n        animations.push([i, array[i]]);\r\n        changed = true;\r\n      } else {\r\n        animations.push([i + 1, array[i + 1]]);\r\n        animations.push([i, i + 1]);\r\n        animations.push([i, i + 1]);\r\n        animations.push([i, array[i]]);\r\n      }\r\n    }\r\n  } while (changed);\r\n  return array;\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport SortingVisualizer from \"./SortingAlgorithms/SortingAlgorithms\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingVisualizer></SortingVisualizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}