{"version":3,"sources":["Algorithms/MergeSort.js","Algorithms/QuickSortLomuto.js","Algorithms/QuickSortHoare.js","Algorithms/HeapSort.js","Algorithms/SelectionSort.js","Algorithms/InsertionSort.js","Algorithms/GnomeSort.js","SortingAlgorithms/SortingAlgorithms.js","Algorithms/BubbleSort.js","App.js","serviceWorker.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getQuickSortAnimationsLomuto","quickSort","start","end","index","pivotIndex","pivotValue","temp","swap","partition","a","b","getQuickSortAnimationsHoare","quickSortHelper","pivot","left","right","getHeapSortAnimations","size","makeMaxHeap","makeFirstMaxHeap","heapSort","heapSize","largestNum","getSelectionSortAnimations","sortedArray","forEach","element","currentMin","currentIndex","compare","arr","i1","i2","selectionSort","getInsertionSortAnimations","spliced","splice","insertionSort","getGnomeSortAnimations","moveBack","gnomeSortHelper","t","SORT_SPEED_MS","SECONDARY_COLOR","yellow","pink","isRunning","canVisualize","currentPattern","isPattern","currentAlgo","widthScaling","isToggled","windowWidth","window","innerWidth","SortingVisualizer","props","initialArrayLength","currentWindowWidth","state","quickSortPattern","minArrayBars","maxArrayBars","NUMBER_OF_ARRAY_BARS","this","resetArray","document","getElementById","classList","toggle","querySelector","style","display","documentElement","setProperty","innerHTML","console","log","opacity","min","max","random","arrayBars","querySelectorAll","x","backgroundColor","setState","disable","enable","buttons","toggleButtons","disabled","didStart","setIsRunning","algo","mergeSort","bubbleSort","gnomeSort","alert","timer","started","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","setTimeout","newHeight","height","undefined","background","whichPattern","changed","getBubbleSortAnimations","className","onClick","id","whichAlgorithm","type","defaultValue","onChange","slider","value","value2","toggleButton","Lomuto_btn","Hoare_btn","map","idx","key","Component","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4e1660f.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    // console.log(\"while 1\");\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([i, j]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    animations.push([i, j]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      // We overwrite the value at index k in the original array with the\n      // value at index i in the auxiliary array.\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      // We overwrite the value at index k in the original array with the\n      // value at index j in the auxiliary array.\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    // console.log(\"while 2\");\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([i, i]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    animations.push([i, i]);\n    // We overwrite the value at index k in the original array with the\n    // value at index i in the auxiliary array.\n    animations.push([k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    // console.log(\"while 3\");\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([j, j]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    animations.push([j, j]);\n    // We overwrite the value at index k in the original array with the\n    // value at index j in the auxiliary array.\n    animations.push([k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","// Lomuto partition scheme\nexport function getQuickSortAnimationsLomuto(array) {\n  const animations = [];\n  quickSort(array, 0, array.length - 1, animations);\n  return animations;\n}\n\nfunction quickSort(array, start, end, animations) {\n  if (start >= end) return;\n  let index = partition(array, start, end, animations);\n  quickSort(array, start, index - 1, animations);\n  quickSort(array, index + 1, end, animations);\n}\n\nfunction partition(array, start, end, animations) {\n  let pivotIndex = start;\n  let pivotValue = array[end];\n  for (let i = start; i < end; i++) {\n    animations.push([i, end]);\n    animations.push([i, end]);\n    if (array[i] > pivotValue) {\n      animations.push([pivotIndex, array[pivotIndex]]);\n    } else {\n      animations.push([pivotIndex, array[i]]);\n      let temp = array[pivotIndex];\n      swap(array, i, pivotIndex);\n\n      animations.push([i, pivotIndex]);\n      animations.push([i, pivotIndex]);\n      animations.push([i, temp]);\n      pivotIndex++;\n    }\n  }\n  swap(array, pivotIndex, end);\n  animations.push([pivotIndex, end]);\n  animations.push([pivotIndex, end]);\n  animations.push([end, array[end]]);\n  animations.push([pivotIndex, end]);\n  animations.push([pivotIndex, end]);\n  animations.push([pivotIndex, array[pivotIndex]]);\n  return pivotIndex;\n}\n\nfunction swap(array, a, b) {\n  let temp = array[a];\n  array[a] = array[b];\n  array[b] = temp;\n}\n","// Hoare partition scheme\nexport function getQuickSortAnimationsHoare(array) {\n  const animations = [];\n  quickSortHelper(array, 0, array.length - 1, animations);\n  return animations;\n}\n\nfunction quickSortHelper(array, start, end, animations) {\n  if (start >= end) return;\n  let pivot = start;\n  let left = start + 1;\n  let right = end;\n\n  while (right >= left) {\n    if (array[left] > array[pivot] && array[right] < array[pivot]) {\n      animations.push([left, right]);\n      animations.push([left, right]);\n      let temp = array[right];\n      array[right] = array[left];\n      array[left] = temp;\n      animations.push([right, array[right]]);\n    }\n    if (array[right] >= array[pivot]) {\n      animations.push([right, right]);\n      animations.push([right, right]);\n      animations.push([right, array[right]]);\n      right--;\n    }\n    if (array[left] <= array[pivot]) {\n      animations.push([left, left]);\n      animations.push([left, left]);\n      animations.push([left, array[left]]);\n      left++;\n    }\n    // if (right >= left) toDispatch.push([left, right]);\n  }\n  if (pivot !== right) {\n    animations.push([right, pivot]);\n    animations.push([right, pivot]);\n    let temp = array[right];\n    array[right] = array[pivot];\n    array[pivot] = temp;\n    animations.push([pivot, array[pivot]]);\n\n    animations.push([pivot, right]);\n    animations.push([pivot, right]);\n    animations.push([right, array[right]]);\n  }\n\n  quickSortHelper(array, start, right - 1, animations);\n  quickSortHelper(array, right + 1, end, animations);\n}\n","export function getHeapSortAnimations(array) {\n  const animations = [];\n  heapSort(array, animations);\n  let end = array.length - 1;\n  while (end > 0) {\n    let temp = array[end];\n    array[end] = array[0];\n    array[0] = temp;\n    animations.push([0, end]);\n    animations.push([0, end]);\n    animations.push([0, array[0]]);\n    animations.push([0, end]);\n    animations.push([0, end]);\n    animations.push([end, array[end]]);\n    end--;\n  }\n  return animations;\n}\n\nfunction heapSort(array, animations) {\n  array = makeFirstMaxHeap(array, animations);\n  let size = array.length;\n  let temp;\n  for (let i = array.length - 1; i > 0; i--) {\n    temp = array[0];\n    array[0] = array[i];\n    array[i] = temp;\n    size--;\n    makeMaxHeap(array, 0, size, animations);\n  }\n  return array;\n}\n\nfunction makeFirstMaxHeap(array, animations) {\n  for (let i = Math.floor(array.length / 2); i >= 0; i--) {\n    makeMaxHeap(array, i, array.length, animations);\n  }\n  return array;\n}\n\nfunction makeMaxHeap(array, index, heapSize, animations) {\n  const left = 2 * index + 1;\n  const right = 2 * index + 2;\n\n  let largestNum = index;\n  if (heapSize > left && array[largestNum] < array[left]) {\n    animations.push([left, largestNum]);\n    animations.push([left, largestNum]);\n    largestNum = left;\n    animations.push([largestNum, array[left]]);\n  }\n\n  if (heapSize > right && array[largestNum] < array[right]) {\n    animations.push([right, largestNum]);\n    animations.push([right, largestNum]);\n    largestNum = right;\n    animations.push([right, array[right]]);\n  }\n\n  if (largestNum !== index) {\n    const temp = array[index];\n    array[index] = array[largestNum];\n    array[largestNum] = temp;\n    animations.push([index, largestNum]);\n    animations.push([index, largestNum]);\n    animations.push([largestNum, array[largestNum]]);\n    animations.push([index, largestNum]);\n    animations.push([index, largestNum]);\n    animations.push([index, array[index]]);\n    makeMaxHeap(array, largestNum, heapSize, animations);\n  }\n}\n","export function getSelectionSortAnimations(array) {\n  const animations = [];\n  selectionSort(array, animations);\n  //   sort(array, animations);\n  return animations;\n}\n\nfunction selectionSort(array, animations) {\n  let sortedArray = [...array];\n  sortedArray.forEach((element, index) => {\n    let currentMin = element;\n    let currentIndex = index;\n    for (let i = index; i < sortedArray.length; i++) {\n      animations.push([i, currentIndex]);\n      animations.push([i, currentIndex]);\n      if (compare(sortedArray[i], currentMin) < 0) {\n        currentMin = sortedArray[i];\n        currentIndex = i;\n        animations.push([currentIndex, currentMin]);\n      } else {\n        animations.push([currentIndex, currentMin]);\n      }\n    }\n    sortedArray = swap(sortedArray, index, currentIndex);\n    animations.push([currentIndex, index]);\n    animations.push([currentIndex, index]);\n    animations.push([currentIndex, sortedArray[currentIndex]]);\n    animations.push([currentIndex, index]);\n    animations.push([currentIndex, index]);\n    animations.push([index, sortedArray[index]]);\n  });\n  return sortedArray;\n}\n\nfunction swap(arr, i1, i2) {\n  let temp = arr[i1];\n  arr[i1] = arr[i2];\n  arr[i2] = temp;\n  return arr;\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1;\n  // a comes first\n  else if (a > b) return 1; // b comes first\n  return 0;\n}\n\n// function sort(array, animations) {\n//   let sortedArray = [...array];\n//   let minIndex = 0;\n//   for (let i = 0; i < sortedArray.length; i++) {\n//     animations.push([i, minIndex]);\n//     animations.push([i, minIndex]);\n//     if (sortedArray[i] > sortedArray[minIndex]) {\n//       sortedArray[minIndex] = sortedArray[i];\n//       animations.push([minIndex, sortedArray[minIndex]]);\n//       animations.push([i, minIndex]);\n//       animations.push([i, minIndex]);\n//       animations.push([i, sortedArray[i]]);\n//     } else {\n//       animations.push([minIndex, sortedArray[minIndex]]);\n//       animations.push([i, minIndex]);\n//       animations.push([i, minIndex]);\n//       animations.push([i, sortedArray[i]]);\n//     }\n//   }\n//   return sortedArray;\n// }\n","export function getInsertionSortAnimations(array) {\n  const animations = [];\n  insertionSort(array, animations);\n  return animations;\n}\n\nfunction insertionSort(array, animations) {\n  var sortedArray = [...array];\n  for (let i = 1; i < sortedArray.length; i++) {\n    for (let j = 0; j < i; j++) {\n      animations.push([i, j]);\n      animations.push([i, j]);\n      if (sortedArray[i] < sortedArray[j]) {\n        let spliced = sortedArray.splice(i, 1);\n        sortedArray.splice(j, 0, spliced[0]);\n        animations.push([i, sortedArray[i]]);\n        animations.push([i, j]);\n        animations.push([i, j]);\n        animations.push([j, sortedArray[j]]);\n      } else {\n        animations.push([i, sortedArray[i]]);\n        animations.push([i, j]);\n        animations.push([i, j]);\n        animations.push([j, sortedArray[j]]);\n      }\n    }\n  }\n  return sortedArray;\n}\n","export function getGnomeSortAnimations(array) {\n  const animations = [];\n  gnomeSortHelper(array, animations);\n  return animations;\n}\n\nfunction gnomeSortHelper(array, animations) {\n  for (let i = 1; i < array.length; i++) {\n    if (array[i - 1] > array[i]) moveBack(array, i, animations);\n    else {\n      animations.push([i, i - 1]);\n      animations.push([i, i - 1]);\n      animations.push([i, array[i]]);\n    }\n  }\n  return array;\n}\n\nfunction moveBack(array, i, animations) {\n  for (; i > 0 && array[i - 1] > array[i]; i--) {\n    var t = array[i];\n    array[i] = array[i - 1];\n    array[i - 1] = t;\n    animations.push([i, i - 1]);\n    animations.push([i, i - 1]);\n    animations.push([i, array[i]]);\n    animations.push([i, i - 1]);\n    animations.push([i, i - 1]);\n    animations.push([i - 1, array[i - 1]]);\n  }\n}\n","import React, { Component } from 'react';\nimport './SortingAlgorithms.css';\nimport { getMergeSortAnimations } from '../Algorithms/MergeSort';\nimport { getQuickSortAnimationsLomuto } from '../Algorithms/QuickSortLomuto';\nimport { getQuickSortAnimationsHoare } from '../Algorithms/QuickSortHoare';\nimport { getBubbleSortAnimations } from '../Algorithms/BubbleSort';\nimport { getHeapSortAnimations } from '../Algorithms/HeapSort';\nimport { getSelectionSortAnimations } from '../Algorithms/SelectionSort';\nimport { getInsertionSortAnimations } from '../Algorithms/InsertionSort';\nimport { getGnomeSortAnimations } from '../Algorithms/GnomeSort';\n\n//Audio\n// let audioCtx = new AudioContext();\n\n// let oscillator = audioCtx.createOscillator();\n\n// Change this value for the speed of the animations.\nlet SORT_SPEED_MS = 1;\n\n// Change this value for the number of bars (value) in the array.\n// let NUMBER_OF_ARRAY_BARS = 300;\n\n// This is the main color of the array bars.\nconst PRIMARY_COLOR = '#8bd8bd';\nlet SECONDARY_COLOR = '#eb2188';\n\nconst yellow = '#D6ED17FF';\nconst pink = '#eb2188';\n// const purple = \"#3c1a5b\";\nconst cyan = '#8bd8bd';\n\nlet isRunning = false;\n\nlet canVisualize = true;\n\n//Quick Sort Algorithm patterns\nlet currentPattern = 'Lomuto Pattern';\n\n// // This is the color of array bars that are being compared throughout the animations.\n// const SECONDARY_COLOR = \"#fff748\";\n\nlet isPattern = false; //Checks to see if there are more than one pattern for an algorithm\nlet currentAlgo = 'Merge Sort';\n\nconst heightShortener = 0.6;\n\nlet widthScaling = 0.5;\n\n// Checks to see if the macro buttons are toggled. If they are on, it will disable the speed slider and lower its\n// opacity, but if they are off it will enable the speed slider and set its opacity to 1\nlet isToggled = true;\n\n// var ViewPortWidth = Math.max(\n//   document.documentElement.clientWidth,\n//   window.innerWidth || 0\n// );\n\nvar windowWidth = window.innerWidth;\n\n// var ViewPortHeight = Math.max(\n//   document.documentElement.clientHeight,\n//   window.innerHeight || 0\n// );\n\nexport default class SortingVisualizer extends Component {\n  constructor(props) {\n    super(props);\n\n    var initialArrayLength = 0;\n\n    var currentWindowWidth = window.innerWidth;\n    if (currentWindowWidth <= 400) initialArrayLength = 50;\n    else if (currentWindowWidth <= 500) initialArrayLength = 100;\n    else if (currentWindowWidth <= 600) initialArrayLength = 150;\n    else if (currentWindowWidth <= 700) initialArrayLength = 200;\n    else if (currentWindowWidth <= 800) initialArrayLength = 250;\n    else if (currentWindowWidth <= 900) initialArrayLength = 275;\n    else initialArrayLength = 300;\n    this.state = {\n      array: [],\n      quickSortPattern: 'Lomuto',\n      minArrayBars: 5,\n      maxArrayBars: initialArrayLength,\n      NUMBER_OF_ARRAY_BARS: initialArrayLength\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n\n    document.getElementById('Lomuto-btn').classList.toggle('current-pattern');\n\n    if (isPattern) {\n      document.querySelector('#change-pattern-btn').style.display =\n        'inline-block';\n    } else {\n      document.querySelector('#change-pattern-btn').style.display = 'none';\n    }\n\n    document.documentElement.style.setProperty(\n      '--view-port-width',\n      `${windowWidth / (this.state.NUMBER_OF_ARRAY_BARS * widthScaling)}px`\n    );\n\n    document.getElementById('current-algorithm').innerHTML = currentAlgo;\n\n    document.querySelector(\n      '#value'\n    ).innerHTML = this.state.NUMBER_OF_ARRAY_BARS;\n    document.querySelector('#value2').innerHTML = SORT_SPEED_MS;\n  }\n\n  resetArray() {\n    console.log('resetArray Called');\n    canVisualize = true;\n    document.querySelector('.vis-btn').style.opacity = 1;\n    const array = [];\n    for (let i = 0; i < this.state.NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, 730));\n    }\n\n    const arrayBars = document.querySelectorAll('.array-bar');\n    for (let x = 0; x < arrayBars.length; x++) {\n      arrayBars[x].style.backgroundColor = cyan;\n    }\n    this.setState({ array });\n\n    if (this.state.NUMBER_OF_ARRAY_BARS < 200) widthScaling = 3;\n    else widthScaling = 3;\n\n    document.documentElement.style.setProperty(\n      '--view-port-width',\n      `${windowWidth / (this.state.NUMBER_OF_ARRAY_BARS * widthScaling)}px`\n    );\n\n    document.documentElement.style.setProperty(\n      '--array-bar-color',\n      PRIMARY_COLOR\n    );\n  }\n\n  setIsRunning() {\n    if (isRunning === true) {\n      this.disable();\n    } else if (isRunning === false) {\n      this.enable();\n    }\n  }\n\n  disable() {\n    // Decrease the opacity of all the interactables\n    isRunning = true;\n    // const sliders = document.querySelectorAll(\".slider\");\n    const buttons = document.querySelectorAll('.btn');\n    const toggleButtons = document.querySelectorAll('.toggle-btn');\n\n    document.querySelector('#change-pattern-btn').style.opacity = 0.5;\n    document.querySelector('.drop-down-container').style.opacity = 0.5;\n    document.getElementById('array-num-slider').disabled = true;\n    document.getElementById('speed-slider').disabled = true;\n    document.getElementById('array-num-slider').style.opacity = 0.5;\n    document.getElementById('speed-slider').style.opacity = 0.5;\n\n    for (let i = 0; i < toggleButtons.length; i++)\n      toggleButtons[i].style.opacity = 0.5;\n    for (let i = 0; i < buttons.length; i++) buttons[i].style.opacity = 0.5;\n    // for (let i = 0; i < sliders.length; i++) sliders[i].style.opacity = 0.5;\n  }\n\n  enable() {\n    // Increase the opacity of all the interactables\n    isRunning = false;\n\n    // const sliders = document.querySelectorAll(\".slider\");\n    const buttons = document.querySelectorAll('.btn');\n    const toggleButtons = document.querySelectorAll('.toggle-btn');\n\n    document.querySelector('#change-pattern-btn').style.opacity = 1;\n    document.querySelector('.drop-down-container').style.opacity = 1;\n    document.getElementById('array-num-slider').disabled = false;\n    document.getElementById('speed-slider').disabled = false;\n    document.getElementById('array-num-slider').style.opacity = 1;\n    document.getElementById('speed-slider').style.opacity = 1;\n\n    for (let i = 0; i < buttons.length; i++) buttons[i].style.opacity = 1;\n    for (let i = 0; i < toggleButtons.length; i++)\n      toggleButtons[i].style.opacity = 1;\n    // for (let i = 0; i < sliders.length; i++) sliders[i].style.opacity = 1;\n  }\n\n  started(didStart) {\n    if (didStart === true) {\n      isRunning = true;\n      this.setIsRunning();\n    } else if (didStart === false) {\n      isRunning = false;\n      this.setIsRunning();\n    }\n  }\n\n  whichAlgorithm(algo) {\n    if (algo === 'Merge Sort') {\n      this.mergeSort();\n    } else if (algo === 'Quick Sort') {\n      this.quickSort();\n    } else if (algo === 'Heap Sort') {\n      this.heapSort();\n    } else if (algo === 'Bubble Sort') {\n      this.bubbleSort();\n    } else if (algo === 'Selection Sort') {\n      this.selectionSort();\n    } else if (algo === 'Insertion Sort') {\n      this.insertionSort();\n    } else if (algo === 'Gnome Sort') {\n      this.gnomeSort();\n    } else alert('That is not an avaiable algorithm');\n  }\n\n  mergeSort() {\n    let timer = 0;\n    this.started(true);\n    const animations = getMergeSortAnimations(this.state.array);\n    const arrayBars = document.getElementsByClassName('array-bar');\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        if (i % 2 === 0) {\n          SECONDARY_COLOR = yellow;\n        } else {\n          SECONDARY_COLOR = pink;\n        }\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * SORT_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n\n          barOneStyle.height = `${newHeight * heightShortener}px`;\n        }, i * SORT_SPEED_MS);\n      }\n    }\n\n    timer += animations.length * SORT_SPEED_MS;\n    setTimeout(() => {\n      for (let i = 0; i < arrayBars.length; i++) {\n        if (arrayBars[i] === undefined) {\n          return;\n        } else {\n          setTimeout(() => {\n            const curArrayBar = arrayBars[i].style;\n            curArrayBar.background = pink;\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\n          }, i * 5);\n        }\n      }\n    }, timer);\n  }\n\n  quickSort() {\n    let whichPattern;\n    if (currentPattern === 'Lomuto Pattern')\n      whichPattern = getQuickSortAnimationsLomuto(this.state.array);\n    else if (currentPattern === 'Hoare Pattern')\n      whichPattern = getQuickSortAnimationsHoare(this.state.array);\n    let timer = 0;\n    this.started(true);\n    const animations = whichPattern;\n    const arrayBars = document.getElementsByClassName('array-bar');\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * SORT_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight * heightShortener}px`;\n        }, i * SORT_SPEED_MS);\n      }\n    }\n\n    timer += animations.length * SORT_SPEED_MS;\n    setTimeout(() => {\n      for (let i = 0; i < arrayBars.length; i++) {\n        if (arrayBars[i] === undefined) {\n          return;\n        } else {\n          setTimeout(() => {\n            const curArrayBar = arrayBars[i].style;\n            curArrayBar.background = pink;\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\n          }, i * 5);\n        }\n      }\n    }, timer);\n  }\n\n  heapSort() {\n    let timer = 0;\n    this.started(true);\n    const animations = getHeapSortAnimations(this.state.array);\n    const arrayBars = document.getElementsByClassName('array-bar');\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        if (i % 2 === 0) {\n          SECONDARY_COLOR = yellow;\n        } else {\n          SECONDARY_COLOR = pink;\n        }\n\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * SORT_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight * heightShortener}px`;\n        }, i * SORT_SPEED_MS);\n      }\n    }\n\n    timer += animations.length * SORT_SPEED_MS;\n    setTimeout(() => {\n      for (let i = 0; i < arrayBars.length; i++) {\n        if (arrayBars[i] === undefined) {\n          return;\n        } else {\n          setTimeout(() => {\n            const curArrayBar = arrayBars[i].style;\n            curArrayBar.background = pink;\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\n          }, i * 5);\n        }\n      }\n    }, timer);\n  }\n\n  selectionSort() {\n    let timer = 0;\n    this.started(true);\n    const animations = getSelectionSortAnimations(this.state.array);\n    const arrayBars = document.getElementsByClassName('array-bar');\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        if (i % 2 === 0) {\n          SECONDARY_COLOR = yellow;\n        } else {\n          SECONDARY_COLOR = pink;\n        }\n\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * SORT_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight * heightShortener}px`;\n        }, i * SORT_SPEED_MS);\n      }\n    }\n\n    timer += animations.length * SORT_SPEED_MS;\n    setTimeout(() => {\n      for (let i = 0; i < arrayBars.length; i++) {\n        if (arrayBars[i] === undefined) {\n          return;\n        } else {\n          setTimeout(() => {\n            const curArrayBar = arrayBars[i].style;\n            curArrayBar.background = pink;\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\n          }, i * 5);\n        }\n      }\n    }, timer);\n  }\n\n  insertionSort() {\n    let timer = 0;\n    this.started(true);\n    const animations = getInsertionSortAnimations(this.state.array);\n    const arrayBars = document.getElementsByClassName('array-bar');\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        if (i % 2 === 0) {\n          SECONDARY_COLOR = yellow;\n        } else {\n          SECONDARY_COLOR = pink;\n        }\n\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * SORT_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight * heightShortener}px`;\n        }, i * SORT_SPEED_MS);\n      }\n    }\n\n    timer += animations.length * SORT_SPEED_MS;\n    setTimeout(() => {\n      for (let i = 0; i < arrayBars.length; i++) {\n        if (arrayBars[i] === undefined) {\n          return;\n        } else {\n          setTimeout(() => {\n            const curArrayBar = arrayBars[i].style;\n            curArrayBar.background = pink;\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\n          }, i * 5);\n        }\n      }\n    }, timer);\n  }\n\n  bubbleSort() {\n    let timer = 0;\n    this.started(true);\n    const animations = getBubbleSortAnimations(this.state.array);\n    const arrayBars = document.getElementsByClassName('array-bar');\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * SORT_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight * heightShortener}px`;\n        }, i * SORT_SPEED_MS);\n      }\n    }\n\n    timer += animations.length * SORT_SPEED_MS;\n    setTimeout(() => {\n      for (let i = 0; i < arrayBars.length; i++) {\n        if (arrayBars[i] === undefined) {\n          return;\n        } else {\n          setTimeout(() => {\n            const curArrayBar = arrayBars[i].style;\n            curArrayBar.background = pink;\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\n          }, i * 5);\n        }\n      }\n    }, timer);\n  }\n\n  gnomeSort() {\n    let timer = 0;\n    this.started(true);\n    const animations = getGnomeSortAnimations(this.state.array);\n    const arrayBars = document.getElementsByClassName('array-bar');\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * SORT_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight * heightShortener}px`;\n        }, i * SORT_SPEED_MS);\n      }\n    }\n    timer += animations.length * SORT_SPEED_MS;\n    setTimeout(() => {\n      for (let i = 0; i < arrayBars.length; i++) {\n        if (arrayBars[i] === undefined) {\n          return;\n        } else {\n          setTimeout(() => {\n            const curArrayBar = arrayBars[i].style;\n            curArrayBar.background = pink;\n            if (i * 5 === arrayBars.length * 5 - 5) this.started(false);\n          }, i * 5);\n        }\n      }\n    }, timer);\n  }\n\n  render() {\n    const { array } = this.state;\n\n    // window.addEventListener('resize', () => {\n    //   // canReRenderBars = true;\n    //   var currentWindowWidth = window.innerWidth;\n    //   if (currentWindowWidth <= 400) {\n    //     this.setState(prevState => ({\n    //       maxArrayBars: (prevState.maxArrayBars = 50)\n    //     }));\n\n    //     this.setState(\n    //       prevState => ({\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\n    //       }),\n    //       () => {\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\n    //         this.resetArray();\n    //       }\n    //     );\n    //   } else if (currentWindowWidth <= 500) {\n    //     this.setState(prevState => ({\n    //       maxArrayBars: (prevState.maxArrayBars = 100)\n    //     }));\n\n    //     this.setState(\n    //       prevState => ({\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\n    //       }),\n    //       () => {\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\n    //         this.resetArray();\n    //       }\n    //     );\n    //   } else if (currentWindowWidth <= 600) {\n    //     this.setState(prevState => ({\n    //       maxArrayBars: (prevState.maxArrayBars = 150)\n    //     }));\n\n    //     this.setState(\n    //       prevState => ({\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\n    //       }),\n    //       () => {\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\n    //         this.resetArray();\n    //       }\n    //     );\n    //   } else if (currentWindowWidth <= 700) {\n    //     this.setState(prevState => ({\n    //       maxArrayBars: (prevState.maxArrayBars = 200)\n    //     }));\n\n    //     this.setState(\n    //       prevState => ({\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\n    //       }),\n    //       () => {\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\n    //         this.resetArray();\n    //       }\n    //     );\n    //   } else if (currentWindowWidth <= 800) {\n    //     this.setState(prevState => ({\n    //       maxArrayBars: (prevState.maxArrayBars = 250)\n    //     }));\n\n    //     this.setState(\n    //       prevState => ({\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\n    //       }),\n    //       () => {\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\n    //         this.resetArray();\n    //       }\n    //     );\n    //   } else if (currentWindowWidth <= 900) {\n    //     this.setState(prevState => ({\n    //       maxArrayBars: (prevState.maxArrayBars = 275)\n    //     }));\n\n    //     this.setState(\n    //       prevState => ({\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\n    //       }),\n    //       () => {\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\n    //         this.resetArray();\n    //       }\n    //     );\n    //   } else {\n    //     this.setState(prevState => ({\n    //       maxArrayBars: (prevState.maxArrayBars = 300)\n    //     }));\n\n    //     this.setState(\n    //       prevState => ({\n    //         NUMBER_OF_ARRAY_BARS: prevState.maxArrayBars\n    //       }),\n    //       () => {\n    //         console.log(this.state.NUMBER_OF_ARRAY_BARS);\n    //         this.resetArray();\n    //       }\n    //     );\n    //   }\n    // });\n\n    return (\n      <div className='array-container'>\n        <nav className='nav'>\n          <ul>\n            {/* Generate New Array Button */}\n            <li>\n              <button\n                className='btn'\n                onClick={() => {\n                  if (isRunning === false) {\n                    this.resetArray();\n                  } else {\n                  }\n                }}\n              >\n                Generate New Array\n              </button>\n            </li>\n            {/* Generate New Array Button End */}\n\n            {/* Drop-Down Box */}\n            <li\n              className='drop-down-container'\n              onClick={() => {\n                if (isRunning === false) {\n                  const items = document.querySelector('.drop-down');\n                  items.classList.toggle('active');\n                }\n              }}\n            >\n              <span id='current-algorithm'> </span>\n              <i className='fas fa-caret-down'></i>\n              <ul className='drop-down'>\n                <li\n                  onClick={() => {\n                    currentAlgo = 'Merge Sort';\n                    document.querySelector(\n                      '#current-algorithm'\n                    ).innerHTML = currentAlgo;\n                    isPattern = false;\n                    document.querySelector(\n                      '#change-pattern-btn'\n                    ).style.display = 'none';\n                  }}\n                >\n                  Merge Sort\n                </li>\n                <li\n                  onClick={() => {\n                    currentAlgo = 'Quick Sort';\n                    document.querySelector(\n                      '#current-algorithm'\n                    ).innerHTML = currentAlgo;\n                    isPattern = true;\n                    document.querySelector(\n                      '#change-pattern-btn'\n                    ).style.display = 'inline-block';\n                  }}\n                >\n                  Quick Sort\n                </li>\n                <li\n                  onClick={() => {\n                    currentAlgo = 'Bubble Sort';\n\n                    document.querySelector(\n                      '#current-algorithm'\n                    ).innerHTML = currentAlgo;\n\n                    isPattern = false;\n\n                    document.querySelector(\n                      '#change-pattern-btn'\n                    ).style.display = 'none';\n                  }}\n                >\n                  Bubble Sort\n                </li>\n                {/* <li\n                  onClick={() => {\n                    currentAlgo = \"Heap Sort\";\n\n                    document.querySelector(\n                      \"#current-algorithm\"\n                    ).innerHTML = currentAlgo;\n\n                    isPattern = false;\n\n                    document.querySelector(\n                      \"#change-pattern-btn\"\n                    ).style.display = \"none\";\n                  }}\n                >\n                  Heap Sort\n                </li> */}\n                <li\n                  onClick={() => {\n                    currentAlgo = 'Gnome Sort';\n                    document.querySelector(\n                      '#current-algorithm'\n                    ).innerHTML = currentAlgo;\n                    isPattern = false;\n                    document.querySelector(\n                      '#change-pattern-btn'\n                    ).style.display = 'none';\n                  }}\n                >\n                  Gnome Sort\n                </li>\n                <li\n                  onClick={() => {\n                    currentAlgo = 'Selection Sort';\n                    document.querySelector(\n                      '#current-algorithm'\n                    ).innerHTML = currentAlgo;\n                    isPattern = false;\n                    document.querySelector(\n                      '#change-pattern-btn'\n                    ).style.display = 'none';\n                  }}\n                >\n                  Selection Sort\n                </li>\n                <li\n                  onClick={() => {\n                    currentAlgo = 'Insertion Sort';\n                    document.querySelector(\n                      '#current-algorithm'\n                    ).innerHTML = currentAlgo;\n                    isPattern = false;\n                    document.querySelector(\n                      '#change-pattern-btn'\n                    ).style.display = 'none';\n                  }}\n                >\n                  Insertion Sort\n                </li>\n              </ul>\n            </li>\n            {/* Drop-Down Box */}\n\n            <li>\n              <button\n                className='vis-btn'\n                onClick={() => {\n                  if (isRunning === false && canVisualize === true) {\n                    document.querySelector('.vis-btn').style.opacity = 0.5;\n                    canVisualize = false;\n                    this.whichAlgorithm(currentAlgo);\n                  } else if (isRunning === true) {\n                  }\n                }}\n              >\n                Visualize\n              </button>\n            </li>\n\n            <li>\n              <div className='slider-container'>\n                {/* Label for slider */}\n                <p className='slider-label'>Number of Bars</p>\n                {/* Value label for slider */}\n                <div className='slider-box'>\n                  <center>\n                    <div id='value'></div>\n                  </center>\n                </div>\n                {/* SLider that changes the number of array values */}\n                <input\n                  type='range'\n                  min={this.state.minArrayBars}\n                  max={this.state.maxArrayBars}\n                  defaultValue={this.state.NUMBER_OF_ARRAY_BARS}\n                  id='array-num-slider'\n                  className='slider'\n                  onChange={() => {\n                    if (isRunning) {\n                    } else {\n                      const slider = document.querySelector(\n                        '#array-num-slider'\n                      );\n                      const value = document.querySelector('#value');\n                      var x = slider.value;\n                      value.innerHTML = x;\n\n                      var color =\n                        'linear-gradient(90deg, #fff748' +\n                        x +\n                        '%, rgb(214, 214, 214)' +\n                        x +\n                        '%)';\n                      slider.style.background = color;\n                      // this.state.NUMBER_OF_ARRAY_BARS = x;\n                      this.resetArray();\n                    }\n                  }}\n                  /* onMouseOver={() => {\n                    const slider = document.querySelector(\"#value-slider\");\n                    var x = slider.value;\n\n                    \n                  }} */\n                />\n              </div>\n            </li>\n            <li>\n              <div className='slider-container'>\n                {/* Label for slider */}\n                <p className='slider-label'>Speed in ms</p>\n                {/* Value label for slider */}\n                <div className='slider-box'>\n                  <center>\n                    <div id='value2'></div>\n                  </center>\n                </div>\n                <input\n                  type='range'\n                  min='0.0'\n                  max='10'\n                  defaultValue={Math.floor(SORT_SPEED_MS)}\n                  id='speed-slider'\n                  className='slider'\n                  onChange={() => {\n                    if (isRunning) {\n                    } else {\n                      const slider = document.querySelector('#speed-slider');\n                      const value2 = document.querySelector('#value2');\n                      var x = slider.value;\n                      value2.innerHTML = x;\n                      SORT_SPEED_MS = x;\n                    }\n                  }}\n                />\n              </div>\n            </li>\n            <li>\n              <button\n                className='toggle-btn'\n                id='ultra-slow'\n                onClick={() => {\n                  const toggleButton = document.querySelector('.toggle-btn');\n                  if (isRunning === false) {\n                    if (isToggled) {\n                      document.getElementById('speed-slider').disabled = true;\n                      document.getElementById(\n                        'speed-slider'\n                      ).style.opacity = 0.5;\n                      toggleButton.classList.toggle('toggleOn');\n                      SORT_SPEED_MS = 1000;\n                      isToggled = false;\n                    } else {\n                      document.getElementById('speed-slider').disabled = false;\n                      document.getElementById('speed-slider').style.opacity = 1;\n                      toggleButton.classList.toggle('toggleOn');\n                      SORT_SPEED_MS = 1;\n                      isToggled = true;\n                    }\n                  } else if (isRunning === true) {\n                  }\n                }}\n              >\n                Ultra Slow\n              </button>\n            </li>\n            <li\n              className='drop-down-container-2'\n              id='change-pattern-btn'\n              onClick={() => {\n                if (isPattern === true && isRunning === false) {\n                  const changePatternBtn = document.querySelector(\n                    '.drop-down-2'\n                  );\n                  changePatternBtn.classList.toggle('active');\n                } else {\n                }\n              }}\n            >\n              Patterns\n              <i className='fas fa-caret-down'></i>\n              <ul className='drop-down-2'>\n                <li\n                  id='Lomuto-btn'\n                  onClick={() => {\n                    if (currentPattern !== 'Lomuto Pattern') {\n                      currentPattern = 'Lomuto Pattern';\n\n                      const Lomuto_btn = document.getElementById('Lomuto-btn');\n                      const Hoare_btn = document.getElementById('Hoare-btn');\n                      Hoare_btn.classList.toggle('current-pattern');\n                      Lomuto_btn.classList.toggle('current-pattern');\n                    } else {\n                    }\n                  }}\n                >\n                  Lomuto Pattern\n                </li>\n                <li\n                  id='Hoare-btn'\n                  onClick={() => {\n                    if (currentPattern !== 'Hoare Pattern') {\n                      currentPattern = 'Hoare Pattern';\n\n                      const Hoare_btn = document.getElementById('Hoare-btn');\n                      const Lomuto_btn = document.getElementById('Lomuto-btn');\n                      Lomuto_btn.classList.toggle('current-pattern');\n                      Hoare_btn.classList.toggle('current-pattern');\n                    } else {\n                    }\n                  }}\n                >\n                  Hoare Pattern\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </nav>\n        <div className='visualization'>\n          {array.map((value, idx) => (\n            <div\n              className='array-bar'\n              key={idx}\n              style={{ height: `${value * heightShortener}px` }}\n            >\n              {/* {value} */}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export function getBubbleSortAnimations(array) {\n  const animations = [];\n  // bubbleSortHelper(array, animations);\n  bubbleSort(array, animations);\n  return animations;\n}\n\n// function bubbleSortHelper(array, animations) {\n//   for (let i = 0; i < array.length; i++) {\n//     for (let x = 0; x < array.length - 1; x++) {\n//       animations.push([x, x + 1]);\n//       animations.push([x, x + 1]);\n//       if (array[x] > array[x + 1]) {\n//         swap(array, x, x + 1);\n//         animations.push([x + 1, array[x + 1]]);\n//         animations.push([x, x + 1]);\n//         animations.push([x, x + 1]);\n//         animations.push([x, array[x]]);\n//       } else {\n//         animations.push([x + 1, array[x + 1]]);\n//         animations.push([x + 1, x]);\n//         animations.push([x + 1, x]);\n//         animations.push([x, array[x]]);\n//       }\n//     }\n//   }\n// }\n\n// function swap(array, a, b) {\n//   let temp = array[a];\n//   array[a] = array[b];\n//   array[b] = temp;\n// }\n\nfunction bubbleSort(array, animations) {\n  do {\n    var changed = false;\n    for (var i = 0; i < array.length - 1; i++) {\n      animations.push([i, i + 1]);\n      animations.push([i, i + 1]);\n      if (array[i] > array[i + 1]) {\n        var temp = array[i];\n        array[i] = array[i + 1];\n        array[i + 1] = temp;\n        animations.push([i + 1, array[i + 1]]);\n        animations.push([i, i + 1]);\n        animations.push([i, i + 1]);\n        animations.push([i, array[i]]);\n        changed = true;\n      } else {\n        animations.push([i + 1, array[i + 1]]);\n        animations.push([i, i + 1]);\n        animations.push([i, i + 1]);\n        animations.push([i, array[i]]);\n      }\n    }\n  } while (changed);\n  return array;\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport SortingVisualizer from \"./SortingAlgorithms/SortingAlgorithms\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}